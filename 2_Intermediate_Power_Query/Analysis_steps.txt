# Appending queries
You are a newly hired data analyst for the Yale New Haven Health System Emergency Department. Your boss has provided you with two data files to be combined. One lists all emergency visits where patients were admitted for further care, and the other lists visits where patients were discharged to their home residences.

Your task will be to combine the datasets to make a master file of all visits for further analysis.

1. In a blank Excel Workbook, open Power Query and import the dept_b_admit.csv and dept_b_discharge.csv files.

2. ...
- The column arrivalhour_bin has a leading character ' that needs to be removed from each query.
Hint
    - Remove the leading ' character by selecting Extract from the Text Column options from the Transform tab of the ribbon.
    - Select Text After Delimiter, and enter the leading ' character as the Delimiter.
- Assess remaining column names and data types to ensure they match between the two queries.

3. Append the two queries to create a new query. Name it "dept_b_master".

NOTE: You might see a warning saying, “Information is needed about data privacy”. Click on Continue to open the pop-up window, check the box that states Ignore Privacy Levels checks for this file and click Save.

# Merging queries with left outer join
The emergency department director requested a triage score breakdown by total visits. They want to understand the distribution of Emergency Severity Index (ESI) scores throughout the data collection period for department b.

ESI levels are numbered 1 through 5, with level 1 indicating the greatest urgency. Visits with ESI from 1 to 3 are considered higher acuity and require higher resources than visits at levels 4 to 5, so keeping track of staffing and resource planning is important.

Your task will be to combine the triage data with the master visit data to prepare this analysis.

1. Import the dept_b_triage_vitals.csv file.

2. Select the dept_b_master query and perform a merge using a left outer join to dept_b_triage_vitals by matching on PatientID.

3. Expand the esi column from the joined column.

4. Close and load queries to the Excel Workbook and create a Pivot Table to assess total PatientID counts by esi level. The pivot table can be added to a new worksheet.

# Merging queries with inner join
At the latest departmental meeting, the chief Emergency Physician mentioned they had noticed an increase in patients presenting to the emergency department for abdominal pain.

You must combine the emergency visit data with the visit chief complaint data to assess this relationship. They are also interested in appropriately assessing the admission rate to plan for resources.

Admission Rate is calculated as the percentage of total visits with disposition of "admit" out of total emergency department visits.

Admission Rate (%) = visits with admit disposition / total visits

1. Import the dept_b_chief_complaint.csv file.

2. Pivot the Attribute column, utilizing Values as the Values Column.`

3. ...
- Remove all columns other than PatientID, dep_name, and cc_abdominalpain and filter out any rows where cc_abdominalpain does not equal 1.
- Rename the query "dept_b_cc_abdominalpain".

4. Perform an inner join to create a new query, by joining the dept_b_master query with the dept_b_chief_complaint query, using PatientID as the common column.

5. Expand the merged column to include cc_abdominalpain, and name the new query "dept_b_abdominalpain".

6. Review the disposition breakdown of Admits vs. Discharge using the column profiling features with column profiling set based on the entire dataset.

# Custom conditional columns
The emergency department team now seeks to investigate the impact of patients presenting with a fever on their admission likelihood.

Your task will be to create a new column to identify the status of a fever based on the reported temperature at the time of triage vitals assessment.

1. In the dept_b_master query, use the Column from Examples feature based on selected column disposition to create a new column where "Discharge" is represented as 0 and "Admit" is represented as 1. Name the new column “admit”.

2. Modify the earlier "Expanded dept_b_triage_vitals" applied step to include all columns except for PatientID and dep_name.

3. Create a custom conditional column called "fever" based on triage_vital_temp.

If the recorded temperature is not recorded, it should show null; otherwise, if 100.4 degrees Fahrenheit or higher, it should display 1, or 0 if below 100.4 degrees Fahrenheit.

# Advanced conditional columns
The nurse manager of your department has requested an analysis of visits during their after-hours periods to determine if staffing is well aligned with demand. They also want to assess a breakdown of severity scores (ESI) during this after-hours period.

You must create a grouping to isolate visits during the specified range.

Note the following time range bins define the hour range for patient arrivals within the arrivalhour_bin column:

07-10: (07:00 am - 10:59 am)
11-14: (11:00 am - 2:59 pm)
15-18: (3:00 pm - 6:59 pm)
19-22: (7:00 pm - 10:59 pm)
23-02: (11:00 pm - 2:59 am)
03-06: (3:00 am - 6:59 am)

1. In the dept_b_master query, undo any filters based on fever or admit.

2. Create a new column called "afterhours" to denote if a visit had a weekend arrivalday (either Saturday or Sunday) and arrived between 7:00 pm and 6:59 am.

Note: you must use brackets to contain or logical operators.
Hint
- Select Custom Column from the Add Column section of the ribbon.
- In the Custom Column pop-up window, enter the column name "afterhours" and conditional code in a structure such as:
if (___ = "Saturday" or ___ = "Sunday") 
    and (___ = "19-22" 
        or ___ = "___" 
        ...) 
then 1 else 0

3. Close and load queries to the Excel Workbook and navigate to the dept_b_master tab.

4. Create a pivot table from the dept_b_master table on a new worksheet and display after-hours visits vs. regular hours visits by esi score to display the total count of visits.

Note: you might need to select Data > Refresh All from the Excel workbook menu to reflect all new columns added

# Calculating early warning system scores
Early Warning System (EWS) scores are instruments hospital care teams utilize to identify initial indicators of clinical deterioration, enabling prompt intervention and management.

The program team of your hospital has asked you to classify their emergency visit data by EWS scores according to the criteria below:
[heart Rate] = "null" --- null
[heart Rate] <= 40 --- 2
[heart Rate] = "41-50" --- 1
[heart Rate] = "51-100" --- 0
[heart Rate] = "101-110" --- 1
[heart Rate] = "111-129" --- 2
[heart Rate] >= 130 --- 3
else 3

1. In the query dept_b_master, add a new column, "hrscore" that classifies the heart rate value (triage_vital_hr) based on Early Warning System (EWS) scores above.

Your custom column syntax should look like this:

if ___ = null then null 
    else if ___ <= 40 then ___
    else if ___ <= 50 then ___
    ...
else 3

2. Create a second column that classifies systolic blood pressure values (triage_vital_sbp) based on the EWS scores. Name it "sbpscore".
Hint
You can create a Custom Column with syntax structured as follows:
if ___ = null then null 
    else if ___ <= 70 then 3
    else if ___ <= 80 then 2
    else if ___ <= 100 then 1
   ... 
else 3

3. Create a final EWS score column to classify respiratory rate values (triage_vital_rr) based on EWS scores and name it "rrscore".

4. Add the scores up into a new total score column and sort in descending order. Name it "ewsscore".

# Grouped index columns
The pharmacy team has sent a new data file with all the medication information collected for each patient who visited the emergency department. It includes each PatientID, the types of medications they are using, and the total medications for each.

Your task will be to enhance this dataset by adding a grouped index medicationrankID to count unique medication types for each PatientID, sorted by top medication type by total medications.

1. 